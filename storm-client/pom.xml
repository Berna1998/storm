<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>storm</artifactId>
        <groupId>org.apache.storm</groupId>
        <version>2.6.3-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>storm-client</artifactId>
    <packaging>jar</packaging>
    <name>Storm Client</name>
    <description>The client side (including worker) of Storm implementations.</description>

    <properties>
        <ba-dua.version>0.6.0</ba-dua.version>
    </properties>

    <dependencies>
<!--
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.8.0</version>
            <scope>test</scope>
        </dependency>  -->

        <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>1.14.1</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-junit5-plugin</artifactId>
            <version>1.2.0</version>
        </dependency>
        <!-- logging -->

        <!--Hadoop Mini Cluster cannot use log4j2 bridge,
    Surefire has a way to exclude the conflicting log4j API jar
    from the classpath, classpathDependencyExcludes, but it didn't work in practice.
    This is here as a work around to place it at the beginning of the classpath
    even though maven does not officially support ordering of the classpath.-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.storm</groupId>
            <artifactId>storm-shaded-deps</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Java EE packages. On JDK8 and below this is a part of java,
        but JDK9+ it is not there by default. -->
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>jakarta.activation</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.activation</groupId>
            <artifactId>jakarta.activation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        
        <!-- kryo -->
        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>kryo</artifactId>
        </dependency>

        <!-- below are transitive dependencies which are version managed in storm pom -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-graphite</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
        </dependency>

        <!-- end of transitive dependency management -->

        <!-- test -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>2.4.7</version>
        </dependency>

        <dependency>
            <groupId>com.example</groupId>
            <artifactId>ba-dua-cli</artifactId>
            <version>${ba-dua.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/com/example/ba-dua-cli/ba-dua-cli-${ba-dua.version}-all.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.example</groupId>
            <artifactId>ba-dua-agent-rt</artifactId>
            <version>${ba-dua.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/com/example/ba-dua-agent-rt/ba-dua-agent-rt-${ba-dua.version}-all.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.example</groupId>
            <artifactId>ba-dua-agent</artifactId>
            <version>${ba-dua.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/com/example/ba-dua-agent/ba-dua-agent-${ba-dua.version}.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>com.example</groupId>
            <artifactId>ba-dua-core</artifactId>
            <version>${ba-dua.version}</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/com/example/ba-dua-core/ba-dua-core-${ba-dua.version}.jar</systemPath>
        </dependency>

    </dependencies>

    <build>
        <sourceDirectory>src/jvm</sourceDirectory>
        <testSourceDirectory>test/jvm</testSourceDirectory>
        <resources>
            <resource>
                <directory>../conf</directory>
            </resource>
            <resource>
                <directory>../</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>NOTICE</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/resources</directory>
                <excludes>
                    <exclude>storm-client-version-info.properties</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${basedir}/src/resources</directory>
                <includes>
                    <include>storm-client-version-info.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/dev</directory>
            </testResource>
            <testResource>
                <directory>test/resources</directory>
            </testResource>
        </testResources>
        <plugins>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.14.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                   <targetClasses>
                        <param>org.apache.storm.utils.ObjectReader</param>
                        <param>org.apache.storm.coordination.CoordinatedBolt</param>
                    </targetClasses>
                    <targetTests>
                        <param>org.apache.storm.utils.ObjectReaderTest</param>
                        <param>org.apache.storm.coordination.CoordinatedBoltTest</param>
                    </targetTests>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <reportsDirectories>
                        <file>${project.build.directory}/test-reports</file>
                    </reportsDirectories>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <reportsDirectory>${project.build.directory}/test-reports</reportsDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <!--Note - the version would be inherited-->
                <configuration>
                    <excludes>**/generated/**</excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                    <!-- multi-lang resources -->
                    <execution>
                        <id>unpack</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.storm</groupId>
                                    <artifactId>multilang-ruby</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.storm</groupId>
                                    <artifactId>multilang-python</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.storm</groupId>
                                    <artifactId>multilang-javascript</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/test-classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <!-- avoid warning about recursion -->
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>

            <!--  BADUA

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <argLine>
                        -javaagent:${project.basedir}/lib/com/example/ba-dua-agent-rt/ba-dua-agent-rt-${ba-dua.version}-all.jar
                        -Doutput.file=${project.build.directory}/coverage.ser
                    </argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                            <phase>verify</phase>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${project.basedir}/lib/com/example/ba-dua-cli/ba-dua-cli-${ba-dua.version}-all.jar</argument>
                                <argument>report</argument>
                                <argument>-classes</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-input</argument>
                                <argument>${project.build.directory}/coverage.ser</argument>
                                <argument>-show-classes</argument>
                                <argument>-show-methods</argument>
                                <argument>-xml</argument>
                                <argument>${project.build.directory}/badua.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>  -->




        </plugins>
    </build>
    <profiles>
        <profile>
            <id>unix_py_tests</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.storm</groupId>
                        <artifactId>storm-maven-plugins</artifactId>
                        <version>${project.version}</version>
                        <executions>
                            <execution>
                                <id>version-info</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>version-info</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        <directory>${basedir}/src/</directory>
                                        <includes>
                                            <include>jvm/**/*.java</include>
                                        </includes>
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <!-- BADUA PROFILE -->
        <profile>
            <id>BaDua</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <argLine>
                                -javaagent:${project.basedir}/lib/com/example/ba-dua-agent-rt/ba-dua-agent-rt-${ba-dua.version}-all.jar
                                -Doutput.file=${project.build.directory}/coverage.ser
                            </argLine>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.5.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-jar</argument>
                                        <argument>${project.basedir}/lib/com/example/ba-dua-cli/ba-dua-cli-${ba-dua.version}-all.jar</argument>
                                        <argument>report</argument>
                                        <argument>-classes</argument>
                                        <argument>${project.build.directory}/classes</argument>
                                        <argument>-input</argument>
                                        <argument>${project.build.directory}/coverage.ser</argument>
                                        <argument>-show-classes</argument>
                                        <argument>-show-methods</argument>
                                        <argument>-xml</argument>
                                        <argument>${project.build.directory}/badua.xml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>


                </plugins>
            </build>
        </profile>

    </profiles>
</project>
